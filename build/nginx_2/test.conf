server {
    listen 80;
    server_name mongo;

    location /mongo {
        proxy_set_header Host $host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Scheme $scheme;

        proxy_pass http://virta_mongo-express:8081/;

        sub_filter 'action="/'  'action="/mongo/';
        sub_filter 'href="/'  'href="/mongo/';
        sub_filter 'src="/'  'src="/mongo/';
        sub_filter_once off;

        rewrite ^/mongo/(.*)$ /$1 break;
    }

    location /pgadmin {
        proxy_set_header Host $host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Scheme $scheme;

        proxy_pass http://virta_pgadmin:5050/;

        sub_filter 'action="/'  'action="/pgadmin/';
        sub_filter 'href="/'  'href="/pgadmin/';
        sub_filter 'src="/'  'src="/pgadmin/';
        sub_filter_once off;

        rewrite ^/pgadmin/(.*)$ /$1 break;
    }

    location /rabbitmq {
        proxy_set_header Host $host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Scheme $scheme;

        proxy_pass http://virta_rabbitmq:15672/;

        sub_filter 'action="/'  'action="/rabbitmq/';
        sub_filter 'href="/'  'href="/rabbitmq/';
        sub_filter 'src="/'  'src="/rabbitmq/';
        sub_filter_once off;

        rewrite ^/rabbitmq/(.*)$ /$1 break;
    }

    access_log off;
    error_log  /var/log/nginx/error.log error;
}
# # web service2 config.
# server {
#     listen 80;
#     listen 443 ssl http2;
#     server_name site2.test;

#     # Path for SSL config/key/certificate
#     ssl_certificate /etc/ssl/certs/nginx/site2.crt;
#     ssl_certificate_key /etc/ssl/certs/nginx/site2.key;
#     include /etc/nginx/includes/ssl.conf;

#     location / {
#         include /etc/nginx/includes/proxy.conf;
#         proxy_pass http://site2_app_1;
#     }

#     access_log off;
#     error_log  /var/log/nginx/error.log error;
# }

# # Default
# server {
#     listen 80 default_server;

#     server_name _;
#     root /var/www/html;

#     charset UTF-8;

#     error_page 404 /backend-not-found.html;
#     location = /backend-not-found.html {
#         allow   all;
#     }

#     location / {
#         return 404;
#     }

#     access_log off;
#     log_not_found off;
#     error_log  /var/log/nginx/error.log error;
# }
