version: '3.1'
services:
  # app:
  #   build: .
  #   container_name: virta_app
  #   restart: on-failure:5
  #   env_file:
  #     - .env
  #   volumes:
  #     - ~/.aspnet/https:/https:ro
  #     - app-data:/var/www/public
  #     - media-data:/var/www/public/pub/media
  #   ports:
  #     - 80:80
  #     - 443:433
  #   depends_on:
  #     - mysql
  #   networks:
  #     - default

  #FRONTEND
  #CONTROL PANEL
  #BACKEND

  mysql:
    image: mysql:${MYSQL_VERSION}
    container_name: virta_mysql
    restart: on-failure:5
    env_file:
      - .env
    volumes:
      - mysql-data:/var/lib/mysql
    ports:
      - ${MYSQL_PORT_HOST}:${MYSQL_PORT}
    expose:
      - ${MYSQL_PORT}
    networks:
      - default

  adminer:
    image: adminer:${ADMINER_VERSION}
    container_name: virta_adminer
    restart: on-failure:5
    ports:
      - ${ADMINER_PORT_HOST}:${ADMINER_PORT}
    networks:
      - default

  mongo:
    image: mongo:${MONGO_VERSION}
    container_name: virta_mongo
    restart: on-failure:5
    env_file:
      - .env
    volumes:
      - mongo-data:/data/db
    ports:
      - ${MONGO_PORT_HOST}:${MONGO_PORT}
    expose:
      - ${MONGO_PORT}
    networks:
      - default

  mongo-express:
    image: mongo-express:${MONGO_EXPRESS_VERSION}
    container_name: virta_mongo-express
    restart: on-failure:5
    env_file:
      - .env
    ports:
      - ${MONGO_EXPRESS_PORT_HOST}:${MONGO_EXPRESS_PORT}
    networks:
      - default

  redis:
    image: redis:${REDIS_VERSION}
    container_name: virta_redis
    restart: on-failure:5
    env_file:
      - .env
    volumes:
      - redis-data:/data
    expose:
      - ${REDIS_PORT}
    networks:
      - default

  # nginx:
  #   image: nginx:${NGINX_VERSION}
  #   container_name: virta_nginx
  #   restart: on-failure:30
  #   volumes:
  #     # - ./build/configs/nginx/default.conf:/etc/nginx/conf.d/default.conf
  #     # - ./build/configs/nginx/cache-router.conf:/etc/nginx/conf.d/cache-router.conf
  #     - app-data:/var/www/public
  #     - media-data:/var/www/public/pub/media
  #   env_file:
  #     - .env
  #   ports:
  #     - ${NGINX_BIND_PORT}:80
  #   expose:
  #     - 8090
  #     - 80
  #   networks:
  #     - default

  rabbitmq:
    image: rabbitmq:${RABBITMQ_VERSION}
    container_name: virta_rabbitmq
    restart: on-failure:30
    hostname: my-rabbit
    # volumes:
    #   - ./build/configs/rabbitmq/etc/definitions.json:/etc/rabbitmq/definitions.json
    #   - ./build/configs/rabbitmq/etc/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    #   - ./build/configs/rabbitmq/data:/var/lib/rabbitmq/mnesia/rabbit@my-rabbit
    #   - ./build/configs/rabbitmq/logs:/var/log/rabbitmq/log
    env_file:
      - .env
    ports:
      - ${RABBITMQ_PORT_HOST}:${RABBITMQ_PORT}
      - ${RABBITMQ_MANAGMENT_PORT_HOST}:${RABBITMQ_MANAGMENT_PORT}
    expose:
      - ${RABBITMQ_PORT}
      - ${RABBITMQ_MANAGMENT_PORT}
    networks:
      - default

  node:
    build:
      context: ./
      dockerfile: ./build/node/Dockerfile
      args:
        NODE_VERSION: ${NODE_VERSION}
    container_name: virta_node
    volumes:
      - ./Node:/app
    ports:
      - ${NODE_PORT_HOST}:${NODE_PORT}

volumes:
  app-data:
  media-data:
  mysql-data:
  mongo-data:
  redis-data:

networks:
  default:
    driver: bridge
